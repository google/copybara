/*
 * Copyright (C) 2022 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.copybara.remotefile;

import static com.google.common.truth.Truth.assertThat;
import static com.google.copybara.testing.FileSubjects.assertThatPath;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.ImmutableSetMultimap;
import com.google.common.io.BaseEncoding;
import com.google.common.testing.FakeTicker;
import com.google.copybara.GeneralOptions;
import com.google.copybara.Origin.Reader;
import com.google.copybara.authoring.Author;
import com.google.copybara.authoring.Authoring;
import com.google.copybara.authoring.Authoring.AuthoringMappingMode;
import com.google.copybara.profiler.Profiler;
import com.google.copybara.util.Glob;
import com.google.copybara.util.console.Console;
import com.google.copybara.util.console.testing.TestingConsole;
import com.google.copybara.version.VersionList;
import com.google.copybara.version.VersionResolver;
import com.google.copybara.version.VersionSelector;
import java.io.ByteArrayInputStream;
import java.net.URL;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.time.Duration;
import java.util.Optional;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnit;
import org.mockito.junit.MockitoRule;

@RunWith(JUnit4.class)
public final class RemoteArchiveOriginTest {

  // TODO(linjordan): create test cases in command util
  private static final String CAPTURED_HELLO_WORLD_ZIP_FILE =
      "UEsDBAoAAAAAAGptUVQtOwivDAAAAAwAAAAIABwAdGVzdC50eHRVVAkAA0iXDmJIlw5idXgLAAEE"
          + "Se4JAARTXwEAaGVsbG8gd29ybGQKUEsBAh4DCgAAAAAAam1RVC07CK8MAAAADAAAAAgAGAAAAAAA"
          + "AQAAAKSBAAAAAHRlc3QudHh0VVQFAANIlw5idXgLAAEESe4JAARTXwEAUEsFBgAAAAABAAEATgAA"
          + "AE4AAAAAAA==";

  private static final String CAPTURED_MULTIPLE_DIRS_ZIP_FILE =
      "UEsDBAoAAAAAAAxlV1QAAAAAAAAAAAAAAAAHABwAcGFyZW50L1VUCQADiHEWYqJxFmJ1eAsAAQRJ"
          + "7gkABFNfAQBQSwMECgAAAAAAFmVXVAAAAAAAAAAAAAAAAA8AHABwYXJlbnQvZGlyLXR3by9VVAkA"
          + "A5xxFmKicRZidXgLAAEESe4JAARTXwEAUEsDBAoAAAAAABZlV1SC/3LkDAAAAAwAAAAZABwAcGFy"
          + "ZW50L2Rpci10d28vc2Vjb25kLnR4dFVUCQADnHEWYpxxFmJ1eAsAAQRJ7gkABFNfAQBzZWNvbmQg"
          + "ZmlsZQpQSwMECgAAAAAAEWVXVAAAAAAAAAAAAAAAAA8AHABwYXJlbnQvZGlyLW9uZS9VVAkAA5Fx"
          + "FmKicRZidXgLAAEESe4JAARTXwEAUEsDBAoAAAAAABFlV1TfMNv0CwAAAAsAAAAYABwAcGFyZW50"
          + "L2Rpci1vbmUvZmlyc3QudHh0VVQJAAORcRZikXEWYnV4CwABBEnuCQAEU18BAGZpcnN0IGZpbGUK"
          + "UEsBAh4DCgAAAAAADGVXVAAAAAAAAAAAAAAAAAcAGAAAAAAAAAAQAO1BAAAAAHBhcmVudC9VVAUA"
          + "A4hxFmJ1eAsAAQRJ7gkABFNfAQBQSwECHgMKAAAAAAAWZVdUAAAAAAAAAAAAAAAADwAYAAAAAAAA"
          + "ABAA7UFBAAAAcGFyZW50L2Rpci10d28vVVQFAAOccRZidXgLAAEESe4JAARTXwEAUEsBAh4DCgAA"
          + "AAAAFmVXVIL/cuQMAAAADAAAABkAGAAAAAAAAQAAAKSBigAAAHBhcmVudC9kaXItdHdvL3NlY29u"
          + "ZC50eHRVVAUAA5xxFmJ1eAsAAQRJ7gkABFNfAQBQSwECHgMKAAAAAAARZVdUAAAAAAAAAAAAAAAA"
          + "DwAYAAAAAAAAABAA7UHpAAAAcGFyZW50L2Rpci1vbmUvVVQFAAORcRZidXgLAAEESe4JAARTXwEA"
          + "UEsBAh4DCgAAAAAAEWVXVN8w2/QLAAAACwAAABgAGAAAAAAAAQAAAKSBMgEAAHBhcmVudC9kaXIt"
          + "b25lL2ZpcnN0LnR4dFVUBQADkXEWYnV4CwABBEnuCQAEU18BAFBLBQYAAAAABQAFALQBAACPAQAA"
          + "AAA=";

  private static final String CAPTURED_HELLO_WORLD_JAR_FILE =
      "UEsDBBQACAgIAOxh3lQAAAAAAAAAAAAAAAAJAAQATUVUQS1JTkYv/soAAAMAUEsHCAAAAAACAAAA"
          + "AAAAAFBLAwQUAAgICADsYd5UAAAAAAAAAAAAAAAAFAAAAE1FVEEtSU5GL01BTklGRVNULk1G803M"
          + "y0xLLS7RDUstKs7Mz7NSMNQz4OVyLkpNLElN0XWqBAoARfQMjRQ0HKtKcxSCK4tLUnOLdRQ885L1"
          + "NHm5eLkAUEsHCMcsKHtCAAAAQwAAAFBLAwQUAAgICACuYd5UAAAAAAAAAAAAAAAAEAAAAEhlbGxv"
          + "V29ybGQuY2xhc3NtUE1Lw0AQfdukTZNGU1tTPwv2IEQP5uih4kUQD0WFiB48Je1StmyyEhPBn6UH"
          + "BQ/+AH+UOBuFIHQPszvvvZl5s1/fH58AjjF00IJno4u1NnoO+li34FsYMLRORCaKUwYjOLhlMM/U"
          + "jDN4E5HxyzJNeH4TJ5IQM41FxjAI7ieL+CkOZZzNw6jIRTYf60InUmU+5edCi70LLqW6U7mcHWm1"
          + "CwttCxsuNrHF0KnovYq3sO1iB7vUoS5i6NZDrpIFnxb/oOj5seApeVYlEf6vI6HCa7JTkCkep2OG"
          + "/hKYwXrQmaRd/GDZKhihSb+lTwNMG6doUzakm9HdPHwHe6EHWabYqkAt6cD9k+5XpYD9ikbPeINZ"
          + "yx2iAIO6moSsVFNWfwBQSwcIDPTd4iABAACpAQAAUEsBAhQAFAAICAgA7GHeVAAAAAACAAAAAAAA"
          + "AAkABAAAAAAAAAAAAAAAAAAAAE1FVEEtSU5GL/7KAABQSwECFAAUAAgICADsYd5Uxywoe0IAAABD"
          + "AAAAFAAAAAAAAAAAAAAAAAA9AAAATUVUQS1JTkYvTUFOSUZFU1QuTUZQSwECFAAUAAgICACuYd5U"
          + "DPTd4iABAACpAQAAEAAAAAAAAAAAAAAAAADBAAAASGVsbG9Xb3JsZC5jbGFzc1BLBQYAAAAAAwAD"
          + "ALsAAAAfAgAAAAA=";

  // test.jar --unjar--> test/java/com/google/test/test.java
  private static final String CAPTURED_JAR_WITH_DIRECTORIES =
      "UEsDBBQACAgIAA+K7VQAAAAAAAAAAAAAAAAJAAQATUVUQS1JTkYv/soAAAMAUEsHCAAAAAACAAAA"
          + "AAAAAFBLAwQUAAgICAAPiu1UAAAAAAAAAAAAAAAAFAAAAE1FVEEtSU5GL01BTklGRVNULk1G803M"
          + "y0xLLS7RDUstKs7Mz7NSMNQz4OVyLkpNLElN0XWqBAoARfQMjRQ0HKtKcxSCK4tLUnOLdRQ885L1"
          + "NHm5eLkAUEsHCMcsKHtCAAAAQwAAAFBLAwQKAAAIAABuW+ZUAAAAAAAAAAAAAAAABQAAAHRlc3Qv"
          + "UEsDBAoAAAgAAFhb5lQAAAAAAAAAAAAAAAAKAAAAdGVzdC9qYXZhL1BLAwQKAAAIAABYW+ZUAAAA"
          + "AAAAAAAAAAAADgAAAHRlc3QvamF2YS9jb20vUEsDBAoAAAgAAFhb5lQAAAAAAAAAAAAAAAAVAAAA"
          + "dGVzdC9qYXZhL2NvbS9nb29nbGUvUEsDBAoAAAgAAG955lQAAAAAAAAAAAAAAAAaAAAAdGVzdC9q"
          + "YXZhL2NvbS9nb29nbGUvdGVzdC9QSwMEFAAICAgA/YntVAAAAAAAAAAAAAAAACMAAAB0ZXN0L2ph"
          + "dmEvY29tL2dvb2dsZS90ZXN0L3Rlc3QuamF2YdPXV8hIzcnJVyjPL8pJAQBQSwcIuFC5oBAAAAAO"
          + "AAAAUEsBAhQAFAAICAgAD4rtVAAAAAACAAAAAAAAAAkABAAAAAAAAAAAAAAAAAAAAE1FVEEtSU5G"
          + "L/7KAABQSwECFAAUAAgICAAPiu1Uxywoe0IAAABDAAAAFAAAAAAAAAAAAAAAAAA9AAAATUVUQS1J"
          + "TkYvTUFOSUZFU1QuTUZQSwECCgAKAAAIAABuW+ZUAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAADB"
          + "AAAAdGVzdC9QSwECCgAKAAAIAABYW+ZUAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAAADkAAAAdGVz"
          + "dC9qYXZhL1BLAQIKAAoAAAgAAFhb5lQAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAwBAAB0ZXN0"
          + "L2phdmEvY29tL1BLAQIKAAoAAAgAAFhb5lQAAAAAAAAAAAAAAAAVAAAAAAAAAAAAAAAAADgBAAB0"
          + "ZXN0L2phdmEvY29tL2dvb2dsZS9QSwECCgAKAAAIAABveeZUAAAAAAAAAAAAAAAAGgAAAAAAAAAA"
          + "AAAAAABrAQAAdGVzdC9qYXZhL2NvbS9nb29nbGUvdGVzdC9QSwECFAAUAAgICAD9ie1UuFC5oBAA"
          + "AAAOAAAAIwAAAAAAAAAAAAAAAACjAQAAdGVzdC9qYXZhL2NvbS9nb29nbGUvdGVzdC90ZXN0Lmph"
          + "dmFQSwUGAAAAAAgACAAAAgAABAIAAAAA";

  // test.jar --unjar--> test.java
  private static final String CAPTURED_JAR_FILE_WITH_NO_DIRECTORIES =
      "UEsDBBQACAgIAGyJ7VQAAAAAAAAAAAAAAAAJAAQATUVUQS1JTkYv/soAAAMAUEsHCAAAAAACAAAA"
          + "AAAAAFBLAwQUAAgICABsie1UAAAAAAAAAAAAAAAAFAAAAE1FVEEtSU5GL01BTklGRVNULk1G803M"
          + "y0xLLS7RDUstKs7Mz7NSMNQz4OVyLkpNLElN0XWqBAoARfQMjRQ0HKtKcxSCK4tLUnOLdRQ885L1"
          + "NHm5eLkAUEsHCMcsKHtCAAAAQwAAAFBLAwQUAAgICAA0ie1UAAAAAAAAAAAAAAAACQAAAHRlc3Qu"
          + "amF2YdPXV8hIzcnJVyjPL8pJAQBQSwcIuFC5oBAAAAAOAAAAUEsBAhQAFAAICAgAbIntVAAAAAAC"
          + "AAAAAAAAAAkABAAAAAAAAAAAAAAAAAAAAE1FVEEtSU5GL/7KAABQSwECFAAUAAgICABsie1Uxywo"
          + "e0IAAABDAAAAFAAAAAAAAAAAAAAAAAA9AAAATUVUQS1JTkYvTUFOSUZFU1QuTUZQSwECFAAUAAgI"
          + "CAA0ie1UuFC5oBAAAAAOAAAACQAAAAAAAAAAAAAAAADBAAAAdGVzdC5qYXZhUEsFBgAAAAADAAMA"
          + "tAAAAAgBAAAAAA==";

  // test.tar --untar--> test/test.txt
  private static final String CAPTURED_TAR_FILE_WITH_DIRECTORIES =
      "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

  // test.tar --untar--> test.txt
  private static final String CAPTURED_TAR_FILE_WITH_NO_DIRECTORIES =
      "UGF4SGVhZGVyL3Rlc3QudHh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDY0NCAANzc3Nzc3IAAyNTc1MjMgADAwMDAwMDAwMDU1IDE0MjYzNjM0MDA2IDAxNzQwNQAgeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMGxpbmpvcmRhbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHJpbWFyeWdyb3VwAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxNSB1aWQ9MTAzMTYyNAozMCBtdGltZT0xNjU3NzQ3NDYyLjY5ODA0OTY1MQolc3QudHh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA2NDQgADM3MzY3MTAAMjU3NTIzIAAwMDAwMDAwMDAxMyAxNDI2MzYzNDAwNiAwMTU0MjcAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIAMDBsaW5qb3JkYW4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHByaW1hcnlncm91cAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaGVsbG8gd29ybGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

  /*
   |-testsymlink.txt
   |-test/
   | |-test.txt
   |-symlinktodir/
   | |-test/
  */
  private static final String CAPTURED_TAR_FILE_WITH_SYMLINKS =
      "UGF4SGVhZGVyL3Rlc3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDc1NSAANzc3Nzc3IAAyNTc1MjMgADAwMDAwMDAwMDU1IDE0MjY0Mjc1NTMxIDAxNjU3NwAgeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMGxpbmpvcmRhbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHJpbWFyeWdyb3VwAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxNSB1aWQ9MTAzMTYyNAozMCBtdGltZT0xNjU3ODk1NzY5LjQ5ODI0OTU5OQolc3QvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA3NTUgADM3MzY3MTAAMjU3NTIzIAAwMDAwMDAwMDAwMCAxNDI2NDI3NTUzMSAwMTQ3MDEAIDUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIAMDBsaW5qb3JkYW4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHByaW1hcnlncm91cAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdGVzdC9QYXhIZWFkZXIvdGVzdHN5bWxpbmsudHh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDY0NCAANzc3Nzc3IAAyNTc1MjMgADAwMDAwMDAwMDU1IDE0MjY0Mjc0MzEwIDAyMTc3MgAgeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMGxpbmpvcmRhbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHJpbWFyeWdyb3VwAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxNSB1aWQ9MTAzMTYyNAozMCBtdGltZT0xNjU3ODk1MTEyLjgzNDY5MTk3Mwolc3QvdGVzdHN5bWxpbmsudHh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDA2NDQgADM3MzY3MTAAMjU3NTIzIAAwMDAwMDAwMDAxMyAxNDI2NDI3NDMxMCAwMjAwMTQAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIAMDBsaW5qb3JkYW4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHByaW1hcnlncm91cAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDAwIAAwMDAwMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaGVsbG8gd29ybheEhlYWRlci90ZXN0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNzU1IAA3Nzc3NzcgADI1NzUyMyAAMDAwMDAwMDAwNTUgMTQyNjQyNzQ0NjUgMDE3NTYzACB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwbGluam9yZGFuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwcmltYXJ5Z3JvdXAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMCAAMDAwMDAwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADE1IHVpZD0xMDMxNjI0CjMwIG10aW1lPTE2NTc4OTUyMjEuNjczMTA0MzgyCgdGVzdC90ZXN0LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDc1NSAAMzczNjcxMAAyNTc1MjMgADAwMDAwMDAwMDAwIDE0MjY0Mjc0NDY1IDAxNTY2NQAgNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhcgAwMGxpbmpvcmRhbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHJpbWFyeWdyb3VwAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAgADAwMDAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0ZXN0L1BheEhlYWRlci9zeW1saW5rdG9kaXIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwNzU1IAA3Nzc3NzcgADI1NzUyMyAAMDAwMDAwMDAwNTQgMTQyNjQyNzYwNzUgMDIxMzMyACB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyADAwbGluam9yZGFuAAAAAAAAAAAAAAAAAAAAAAA"
          + "
          + "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

  @Rule public final MockitoRule mocks = MockitoJUnit.rule();
  @Mock HttpStreamFactory transport;
  @Mock VersionSelector versionSelector;
  @Mock VersionList versionList;
  @Mock VersionResolver versionResolver;
  private Path workdir;
  private Profiler profiler;
  private FakeTicker ticker;
  private RemoteFileOptions remoteFileOptions;
  private Authoring authoring;
  private Console console;
  private GeneralOptions generalOptions;


  @Before
  public void setUp() throws Exception {
    workdir = Files.createTempDirectory("workdir");
    ticker = new FakeTicker().setAutoIncrementStep(Duration.ofMillis(1));
    // profiler = new Profiler(ticker);
    remoteFileOptions = new RemoteFileOptions();
    remoteFileOptions.transport = () -> transport;
    generalOptions =
        new GeneralOptions(System.getenv(), FileSystems.getDefault(), new TestingConsole());
    generalOptions.setVersionSelectorUseCliRefForTest(false);
    authoring =
        new Authoring(
            new Author("foo", "default@example.com"),
            AuthoringMappingMode.PASS_THRU,
            ImmutableSet.of());
  }

  public RemoteArchiveOrigin getRemoteArchiveOriginUnderTest(
      String archiveSourceURL,
      VersionList versionList,
      VersionSelector versionSelector,
      VersionResolver versionResolver,
      RemoteFileType remoteFileType
      )
      throws Exception {
    return new RemoteArchiveOrigin(
        Author.parse("Copybara <noreply@copybara.io>"),
        "a message",
        generalOptions,
        remoteFileOptions,
        remoteFileType,
        archiveSourceURL,
        versionList,
        versionSelector,
        versionResolver);
  }

  @Test
  public void testZipFileUnpacked() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.zip")))
        .thenReturn(
            new ByteArrayInputStream(BaseEncoding.base64().decode(CAPTURED_HELLO_WORLD_ZIP_FILE)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.zip", versionList, versionSelector, versionResolver, RemoteFileType.ZIP);

    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);
    assertThatPath(workdir).containsFile("test.txt", "hello world\n");
  }

  @Test
  public void testZipFileEmptyGlob() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.zip")))
        .thenReturn(
            new ByteArrayInputStream(BaseEncoding.base64().decode(CAPTURED_HELLO_WORLD_ZIP_FILE)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.zip", versionList, versionSelector, versionResolver, RemoteFileType.ZIP);
    Reader<RemoteArchiveRevision> reader =
        underTest.newReader(
            Glob.createGlob(ImmutableList.of("no match"), ImmutableList.of("**")), authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsNoFiles("test.txt", "hello world\n");
  }

  @Test
  public void testZipFileMultipleDirs() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.zip")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_MULTIPLE_DIRS_ZIP_FILE)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.zip", versionList, versionSelector, versionResolver, RemoteFileType.ZIP);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFile("parent/dir-one/first.txt", "first file\n");
    assertThatPath(workdir).containsFile("parent/dir-two/second.txt", "second file\n");
  }

  @Test
  public void testJarFlatDirectory() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.jar")))
        .thenReturn(
            new ByteArrayInputStream(BaseEncoding.base64().decode(CAPTURED_HELLO_WORLD_JAR_FILE)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.jar", versionList, versionSelector, versionResolver, RemoteFileType.JAR);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFiles("HelloWorld.class");
  }

  @Test
  public void testJarNonFlatDirectory() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.jar")))
        .thenReturn(
            new ByteArrayInputStream(BaseEncoding.base64().decode(CAPTURED_JAR_WITH_DIRECTORIES)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.jar", versionList, versionSelector, versionResolver, RemoteFileType.JAR);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFile("test/java/com/google/test/test.java", "// hello world");
  }

  @Test
  public void testFlatJarContents() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.jar")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_JAR_FILE_WITH_NO_DIRECTORIES)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.jar", versionList, versionSelector, versionResolver, RemoteFileType.JAR);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFile("test.java", "// hello world");
  }

  @Test
  public void testTarFlatDirectory() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.tar")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_TAR_FILE_WITH_NO_DIRECTORIES)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.tar", versionList, versionSelector, versionResolver, RemoteFileType.TAR);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFile("test.txt", "hello world");
  }

  @Test
  public void testTarNonFlatDirectory() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.tar")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_TAR_FILE_WITH_DIRECTORIES)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.tar", versionList, versionSelector, versionResolver, RemoteFileType.TAR);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFile("test/test.txt", "hello world");
  }

  @Test
  public void testTarNonFlatDirectoryWithSymlinks() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.tar")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_TAR_FILE_WITH_SYMLINKS)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.tar", versionList, versionSelector, versionResolver, RemoteFileType.TAR);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFile("test/test/test.txt", "hello world");
    assertThatPath(workdir).containsFile("test/testsymlink.txt", "hello world");
    assertThatPath(workdir).containsFile("test/symlinktodir/test/test.txt", "hello world");
  }

  @Test
  public void testAsIsArchiveCheckout() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.zip")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_TAR_FILE_WITH_DIRECTORIES)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.zip", versionList, versionSelector, versionResolver, RemoteFileType.AS_IS);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFiles("foo.zip");
  }

  @Test
  public void testAsIsArchiveCheckoutWithVersionTargeting() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of("v.1.0.0"));
    when(versionList.list()).thenReturn(ImmutableSet.of("v1.0.0"));
    when(transport.open(new URL("https://foo.v.1.0.0.zip")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_TAR_FILE_WITH_DIRECTORIES)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.${VERSION}.zip",
            versionList,
            versionSelector,
            versionResolver,
            RemoteFileType.AS_IS);
    Reader<RemoteArchiveRevision> reader = underTest.newReader(Glob.ALL_FILES, authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsFiles("foo.v.1.0.0.zip");
  }

  @Test
  public void testTarFileEmptyGlob() throws Exception {
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of(""));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://foo.tar")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_TAR_FILE_WITH_DIRECTORIES)));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.tar", versionList, versionSelector, versionResolver, RemoteFileType.TAR);
    Reader<RemoteArchiveRevision> reader =
        underTest.newReader(
            Glob.createGlob(ImmutableList.of("no match"), ImmutableList.of("**")), authoring);
    reader.checkout(underTest.resolve(null), workdir);

    assertThatPath(workdir).containsNoFiles("test.txt", "hello world\n");
  }

  @Test
  public void testArchiveCheckoutWithVersionResolver() throws Exception {
    generalOptions.setVersionSelectorUseCliRefForTest(true);
    when(versionSelector.select(any(), any(), any())).thenReturn(Optional.of("v0.1.1"));
    when(versionList.list()).thenReturn(ImmutableSet.of());
    when(transport.open(new URL("https://v0.1.1.tar")))
        .thenReturn(
            new ByteArrayInputStream(
                BaseEncoding.base64().decode(CAPTURED_TAR_FILE_WITH_DIRECTORIES)));
    when(versionResolver.resolve(eq("v0.1.1"), any()))
        .thenReturn(
            new RemoteArchiveRevision(new RemoteArchiveVersion("https://v0.1.1.tar", "v0.1.1")));

    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://${VERSION}.tar",
            versionList,
            versionSelector,
            versionResolver,
            RemoteFileType.TAR);
    Reader<RemoteArchiveRevision> reader =
        underTest.newReader(
            Glob.createGlob(ImmutableList.of("no match"), ImmutableList.of("**")), authoring);
    reader.checkout(underTest.resolve("v0.1.1"), workdir);

    verify(versionResolver, times(1)).resolve(eq("v0.1.1"), any());
    assertThatPath(workdir).containsNoFiles("test.txt", "hello world\n");
  }

  @Test
  public void testDescribe() throws Exception {
    RemoteArchiveOrigin underTest =
        getRemoteArchiveOriginUnderTest(
            "https://foo.tar", versionList, versionSelector, versionResolver, RemoteFileType.TAR);
    ImmutableSetMultimap<String, String> description =
        underTest.describe(
            Glob.createGlob(ImmutableList.of("path/to/file.txt"), ImmutableList.of()));

    assertThat(description).containsEntry("url", "https://foo.tar");
    assertThat(description).containsEntry("type", "remotefiles.origin");
    assertThat(description).containsEntry("root", "path/to");
  }
}
